<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Home</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="flex min-h-screen bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">

  <!-- Include Navbar + AI -->
  <%- include("../partials/navbar") %>


  <!-- Main content -->
  <main class="flex-1 ml-0 md:ml-64 p-6 md:p-10">
    <header class="bg-gray-100 dark:bg-gray-800 rounded-xl shadow-md p-6 mb-8 transition-colors duration-300">
      <h1 class="text-2xl font-bold">Student Councelling</h1>
      <h2 class="text-xl font-semibold">How are you feeling, <%= user ? user.name : "Guest" %>?</h2>
    </header>
       <section>
  <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-6">Your Booked Counsellors</h2>

  <% 
    const myBooked = counsellors.filter(c => 
      c.booked && c.bookedBy && user && c.bookedBy._id.toString() === user._id.toString()
    ); 
  %>

  <% if (myBooked.length > 0) { %>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      <% myBooked.forEach(c => { %>
        <div class="bg-gray-100 dark:bg-gray-800 rounded-xl shadow-lg p-6 hover:scale-105 transform transition duration-300">
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-xl font-bold text-gray-900 dark:text-white"><%= c.name %></h3>
            <span class="bg-green-600 text-white text-sm px-2 py-1 rounded-full font-semibold">Booked</span>
          </div>
          <p class="text-gray-700 dark:text-gray-300 mb-1"><strong>Specialization:</strong> <%= c.specialization %></p>
          <p class="text-gray-700 dark:text-gray-300 mb-1"><strong>Slot:</strong> <%= c.selectedSlot %></p>
          <p class="text-gray-700 dark:text-gray-300 mb-1"><strong>Email:</strong> <%= c.email %></p>

          <form action="/counsellors/attended" method="POST">
            <input type="hidden" name="id" value="<%= c._id %>">
            <button 
              type="submit" 
              class="mt-3 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition">
              Session Attended
            </button>
          </form>
        </div>
      <% }) %>
    </div>
  <% } else { %>
    <p class="text-gray-500 dark:text-gray-400 text-lg">You haven't booked any counsellors yet.</p>
  <% } %>
</section>

  </main>

  <!-- Scripts -->
  <script>
    // Dark mode toggle
window.toggleDarkMode = function () {
  const isDark = document.documentElement.classList.toggle("dark");
  localStorage.setItem("theme", isDark ? "dark" : "light");
};


// Run this once on page load to apply saved theme
(function applySavedTheme() {
  const savedTheme = localStorage.getItem("theme");
  if (savedTheme === "dark") {
    document.documentElement.classList.add("dark");
  } else {
    document.documentElement.classList.remove("dark");
  }
})();


    // Chatbot toggle
    function toggleChat() {
      const chatBox = document.getElementById('chatbox');
      chatBox.classList.toggle('hidden');
    }

    // Chatbot message handling
    async function sendMessage() {
      const input = document.getElementById("chat-input");
      const msg = input.value.trim();
      if (!msg) return;

      const chatContent = document.getElementById("chat-content");
      chatContent.innerHTML += `
        <div class="text-right mb-2">
          <span class="inline-block bg-blue-600 text-white px-3 py-1 rounded-xl">${msg}</span>
        </div>`;
      input.value = "";
      chatContent.scrollTop = chatContent.scrollHeight;

      try {
        const response = await fetch("/api/chat", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ message: msg }),
        });

        const data = await response.json();
        chatContent.innerHTML += `
          <div class="text-left mb-2">
            <span class="inline-block bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white px-3 py-1 rounded-xl">
              ${data.reply || "⚠️ No reply received."}
            </span>
          </div>`;
        chatContent.scrollTop = chatContent.scrollHeight;
      } catch (err) {
        chatContent.innerHTML += `<div class="text-left mb-2 text-red-500">Error: Could not get response</div>`;
        console.error(err);
      }
    }
  </script>
</body>
</html>
