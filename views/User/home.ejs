<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Home</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="flex min-h-screen bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100">

  <!-- Include Navbar + AI -->
  <%- include("../partials/navbar") %>


  <!-- Main content -->
  <main class="flex-1 ml-0 md:ml-64 p-6 md:p-10">
    <header class="bg-gray-100 dark:bg-gray-800 rounded-xl shadow-md p-6 mb-8 transition-colors duration-300">
      <h1 class="text-2xl font-bold">Student Councelling</h1>
      <h2 class="text-xl font-semibold">How are you feeling, <%= user ? user.name : "Guest" %>?</h2>
    </header>
       <section>
  <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-6">Your Bookings</h2>

  <% if (userBookings && userBookings.length > 0) { %>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      <% userBookings.forEach(booking => { %>
        <div class="bg-gray-100 dark:bg-gray-800 rounded-xl shadow-lg p-6 hover:scale-105 transform transition duration-300">
          <div class="flex items-center justify-between mb-4">
            <h3 class="text-xl font-bold text-gray-900 dark:text-white"><%= booking.counsellor.name %></h3>
            <span class="bg-green-600 text-white text-sm px-2 py-1 rounded-full font-semibold">Booked</span>
          </div>
          <p class="text-gray-700 dark:text-gray-300 mb-1"><strong>Specialization:</strong> <%= booking.counsellor.specialization %></p>
          <p class="text-gray-700 dark:text-gray-300 mb-1"><strong>Slot:</strong> <%= booking.slot %></p>
          <p class="text-gray-700 dark:text-gray-300 mb-1"><strong>Date:</strong> <%= new Date(booking.date).toLocaleDateString() %></p>
          <p class="text-gray-700 dark:text-gray-300 mb-1"><strong>Email:</strong> <%= booking.counsellor.email %></p>
          
          <!-- Zoom Meeting Details -->
          <% if (booking.zoomMeeting && booking.zoomMeeting.joinUrl) { %>
            <div class="bg-blue-50 dark:bg-blue-900/20 p-3 rounded-lg mt-3 mb-3">
              <h4 class="text-blue-800 dark:text-blue-200 font-semibold mb-2">üîó Zoom Meeting Details</h4>
              <p class="text-blue-700 dark:text-blue-300 text-sm mb-2">
                <strong>Meeting Topic:</strong> <%= booking.zoomMeeting.topic %>
              </p>
              <div class="flex flex-col gap-2">
                <a href="<%= booking.zoomMeeting.joinUrl %>" 
                   target="_blank" 
                   class="inline-flex items-center px-3 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 transition">
                  <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
                    <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"></path>
                  </svg>
                  Join Meeting
                </a>
                <% if (booking.zoomMeeting.password) { %>
                  <p class="text-blue-700 dark:text-blue-300 text-xs">
                    <strong>Password:</strong> <%= booking.zoomMeeting.password %>
                  </p>
                <% } %>
              </div>
            </div>
          <% } else if (booking.meetingScheduled === false) { %>
            <div class="bg-yellow-50 dark:bg-yellow-900/20 p-3 rounded-lg mt-3 mb-3">
              <p class="text-yellow-700 dark:text-yellow-300 text-sm">
                ‚è≥ Meeting details are being prepared. You will receive an email with Zoom link shortly.
              </p>
            </div>
          <% } %>

          <div class="flex gap-2 mt-3">
            <form action="/counsellors/attended" method="POST" class="flex-1">
              <input type="hidden" name="bookingId" value="<%= booking._id %>">
              <button 
                type="submit" 
                class="w-full px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition">
                Mark Attended
              </button>
            </form>
            <form action="/counsellors/cancel" method="POST" class="flex-1">
              <input type="hidden" name="bookingId" value="<%= booking._id %>">
              <button 
                type="submit" 
                class="w-full px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition">
                Cancel
              </button>
            </form>
          </div>
        </div>
      <% }) %>
    </div>
  <% } else { %>
    <p class="text-gray-500 dark:text-gray-400 text-lg">You haven't booked any counsellors yet.</p>
    <a href="/counsellors" class="mt-4 inline-block px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition">
      Browse Available Counsellors
    </a>
  <% } %>
</section>

  </main>

  <!-- Scripts -->
  <script>
    // Dark mode toggle
window.toggleDarkMode = function () {
  const isDark = document.documentElement.classList.toggle("dark");
  localStorage.setItem("theme", isDark ? "dark" : "light");
};


// Run this once on page load to apply saved theme
(function applySavedTheme() {
  const savedTheme = localStorage.getItem("theme");
  if (savedTheme === "dark") {
    document.documentElement.classList.add("dark");
  } else {
    document.documentElement.classList.remove("dark");
  }
})();


    // Chatbot toggle
    function toggleChat() {
      const chatBox = document.getElementById('chatbox');
      chatBox.classList.toggle('hidden');
    }

    // Chatbot message handling
    async function sendMessage() {
      const input = document.getElementById("chat-input");
      const msg = input.value.trim();
      if (!msg) return;

      const chatContent = document.getElementById("chat-content");
      chatContent.innerHTML += `
        <div class="text-right mb-2">
          <span class="inline-block bg-blue-600 text-white px-3 py-1 rounded-xl">${msg}</span>
        </div>`;
      input.value = "";
      chatContent.scrollTop = chatContent.scrollHeight;

      try {
        const response = await fetch("/api/chat", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ message: msg }),
        });

        const data = await response.json();
        chatContent.innerHTML += `
          <div class="text-left mb-2">
            <span class="inline-block bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-white px-3 py-1 rounded-xl">
              ${data.reply || "‚ö†Ô∏è No reply received."}
            </span>
          </div>`;
        chatContent.scrollTop = chatContent.scrollHeight;
      } catch (err) {
        chatContent.innerHTML += `<div class="text-left mb-2 text-red-500">Error: Could not get response</div>`;
        console.error(err);
      }
    }
  </script>
</body>
</html>
